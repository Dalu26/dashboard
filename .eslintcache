[{"C:\\Users\\user\\Documents\\React\\dashboard\\src\\index.js":"1","C:\\Users\\user\\Documents\\React\\dashboard\\src\\App.js":"2","C:\\Users\\user\\Documents\\React\\dashboard\\src\\Component\\UserComponent.js":"3","C:\\Users\\user\\Documents\\React\\dashboard\\src\\reportWebVitals.js":"4","C:\\Users\\user\\Documents\\React\\dashboard\\src\\Screens\\Onboarding.js":"5","C:\\Users\\user\\Documents\\React\\dashboard\\src\\Screens\\CardComponent.js":"6","C:\\Users\\user\\Documents\\React\\dashboard\\src\\Component\\SearchBar.js":"7","C:\\Users\\user\\Documents\\React\\dashboard\\src\\Screens\\UserDetails.js":"8"},{"size":500,"mtime":1610195440604,"results":"9","hashOfConfig":"10"},{"size":864,"mtime":1610536145930,"results":"11","hashOfConfig":"10"},{"size":1830,"mtime":1610683664045,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1610157877021,"results":"13","hashOfConfig":"10"},{"size":1418,"mtime":1610631752081,"results":"14","hashOfConfig":"10"},{"size":8282,"mtime":1610686661012,"results":"15","hashOfConfig":"10"},{"size":659,"mtime":1610528855592,"results":"16","hashOfConfig":"10"},{"size":1687,"mtime":1610645829599,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"yfj6oe",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\user\\Documents\\React\\dashboard\\src\\index.js",[],["39","40"],"C:\\Users\\user\\Documents\\React\\dashboard\\src\\App.js",["41","42"],"import React from 'react';\nimport './App.css';\nimport Onboarding from './Screens/Onboarding';\nimport CardComponent from './Screens/CardComponent';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    // this.fetchUsers();\n  }\n\n  // fetchUsers = async () => {\n  //   const res = await fetch('https://randomuser.me/api/', { method: 'GET', headers })\n  //   const data = await res.json();\n  //   console.log(data)\n  //   const users = this.setState({users: data}) \n  // }\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <Onboarding {...this.props} />\n          <CardComponent  {...this.props} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\user\\Documents\\React\\dashboard\\src\\Component\\UserComponent.js",["43","44"],"C:\\Users\\user\\Documents\\React\\dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\React\\dashboard\\src\\Screens\\Onboarding.js",["45","46"],"import React from 'react';\r\nimport './Onboarding.css';\r\nimport SearchBar from '../Component/SearchBar'; \r\n\r\nclass Onboarding extends React.Component {\r\n    onSearchSubmit(term) {}\r\n    render(){\r\n        return (\r\n        <div className=\"Onboarding\">\r\n            <div className=\"container\">\r\n                <div className=\"welcome-name\">Hello, Emerald</div>\r\n                    {/* <p id=\"name\">Hello, Emerald</p> */}\r\n                <div className=\"welcome-text\">Welcome to your dashboard, kindly sort through the user base</div>\r\n\r\n                <SearchBar onSubmit={this.onSearchSubmit} placeholder=\"Find a user\" />\r\n\r\n                <div className=\"show-users\">Show Users</div>\r\n                <div className=\"gender-section\">\r\n                    <div className=\"gender-container\">\r\n                        <button onClick=\"#\" className=\"gender\"></button>\r\n                        <p>All Users</p>\r\n                    </div>\r\n                    <div className=\"gender-container\">\r\n                        <button className=\"gender\"></button>\r\n                        <p>Male Users</p>\r\n                    </div>\r\n                    <div className=\"gender-container\">\r\n                        <a className=\"gender\"></a>\r\n                        <p>Female Users</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default Onboarding;","C:\\Users\\user\\Documents\\React\\dashboard\\src\\Screens\\CardComponent.js",["47","48","49","50","51","52","53"],"import React from 'react';\r\nimport './CardComponent.css';\r\nimport UserComponent from '../Component/UserComponent';\r\nimport UserDetails from './UserDetails';\r\nimport axios from 'axios';\r\n\r\nclass CardComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          users: [],\r\n          location: [],\r\n          search: '',\r\n          dropDown: '',\r\n          isHidden: true,\r\n          switchOn: true,\r\n          currentPage: 1,\r\n          usersPerPage: 6,\r\n          upperPageBound: 3,\r\n          lowerPageBound: 0,\r\n          isPrevBtnActive: 'disabled',\r\n          isNextBtnActive: '',\r\n          pageBound: 3,\r\n          // sortedCountries: [],\r\n        };\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.fetchUsers();\r\n      }\r\n\r\n    fetchUsers = async () =>{\r\n      const response = await axios.get('https://randomuser.me/api/?page=5&results=50&seed=123')\r\n      const users = response.data.results;\r\n      this.setState({users})\r\n      // console.log(users)\r\n    }\r\n\r\n    // onSearchEnter = event => {\r\n    //   const {users} = this.state;\r\n    //   event.preventDefault();\r\n    \r\n    //   users.filter((users) =>\r\n    //   users.location.country.toLowerCase().includes(this.state.search.toLowerCase()))\r\n    //     //console.log(users)\r\n  \r\n    //   //onSubmit(this.state.search);\r\n    // };\r\n\r\n\r\n    onSearchSubmit=(event)=> {\r\n      // const {users} = this.state;\r\n      event.preventDefault();\r\n      const user = this.state.users.filter((user) => user.name.first+user.name.last.includes(this.state.search))\r\n      .map((result) => {\r\n        return(\r\n          <div >\r\n            <UserComponent  onClick={this.handleToggleCardView} image={result.picture.medium} address={result.location.street.number + ' ' + result.location.street.name + ', ' + result.location.city + ', ' + result.location.state} email={result.email} phone={result.phone} />\r\n          </div>\r\n        )\r\n      })\r\n      // console.log(this.state.search);\r\n      console.log(user, \"searched\")\r\n    };\r\n\r\n//     componentDidUpdate() {\r\n//       $(\"ul li.active\").removeClass('active');\r\n//       $('ul li#'+this.state.currentPage).addClass('active');\r\n// }\r\n\r\n\r\nhandleClick =(event)=> {\r\n  let userid = Number(event.target.id);\r\n  this.setState({\r\n    currentPage: userid\r\n  });\r\n  // $(\"ul li.active\").removeClass('active');\r\n  // $('ul li#'+listid).addClass('active');\r\n   this.setPrevAndNextBtnClass(userid);\r\n}\r\nsetPrevAndNextBtnClass(userid) {\r\n  let totalPage = Math.ceil(this.state.users.length / this.state.usersPerPage);\r\n  this.setState({isNextBtnActive: 'disabled'});\r\n  this.setState({isPrevBtnActive: 'disabled'});\r\n  if(totalPage === userid && totalPage > 1){\r\n      this.setState({isPrevBtnActive: ''});\r\n  }\r\n  else if(userid === 1 && totalPage > 1){\r\n      this.setState({isNextBtnActive: ''});\r\n  }\r\n  else if(totalPage > 1){\r\n      this.setState({isNextBtnActive: ''});\r\n      this.setState({isPrevBtnActive: ''});\r\n  }\r\n}\r\nbtnPrevClick = () => {\r\n  if((this.state.currentPage -1)%this.state.pageBound === 0 ){\r\n      this.setState({upperPageBound: this.state.upperPageBound - this.state.pageBound});\r\n      this.setState({lowerPageBound: this.state.lowerPageBound - this.state.pageBound});\r\n  }\r\n  let userid = this.state.currentPage - 1;\r\n  this.setState({ currentPage : userid});\r\n  this.setPrevAndNextBtnClass(userid);\r\n}\r\nbtnNextClick =() => {\r\n  if((this.state.currentPage +1) > this.state.upperPageBound ){\r\n      this.setState({upperPageBound: this.state.upperPageBound + this.state.pageBound});\r\n      this.setState({lowerPageBound: this.state.lowerPageBound + this.state.pageBound});\r\n  }\r\n  let userid = this.state.currentPage + 1;\r\n  this.setState({ currentPage : userid});\r\n  this.setPrevAndNextBtnClass(userid);\r\n}\r\n\r\nhandleToggleCardView =()=>{\r\n  this.setState({isHidden: !this.state.isHidden})\r\n}\r\n\r\nhandleSwitch =()=> {\r\n  this.setState({switchOn: !this.state.switchOn})\r\n}\r\n\r\nhandleDownload = async(event)=>{\r\n  const {users} = this.state;\r\n  // const name = users.name.title + ' ' + users.name.first + ' ' + users.name.last;\r\n  // const address = users.location.street.number + ' ' + users.location.street.name + ', ' + users.location.city + ', ' + users.location.state;\r\n  // const email = users.email;\r\n  // const gender = users.gender; \r\n  // const phone = users.phone;\r\n  // const URL = 'https://randomuser.me/api/?results=3'\r\n  await axios.get('https://randomuser.me/api/?results=50&format=csv&dl')\r\n};\r\n\r\n    render(){\r\n        const { sortedCountries, users, currentPage, usersPerPage,upperPageBound,lowerPageBound,isPrevBtnActive,isNextBtnActive } = this.state;\r\n      \r\n        const indexOfLastUser = currentPage * usersPerPage;\r\n        const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n        const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n        const user = currentUsers.map((user, i) => {\r\n          return(\r\n           <div key={i} >\r\n             <UserComponent name={user.name.title + ' ' + user.name.first + ' ' + user.name.last} onClick={this.handleToggleCardView} image={user.picture.medium} address={user.location.street.number + ' ' + user.location.street.name + ', ' + user.location.city + ', ' + user.location.state} email={user.email} phone={user.phone} />\r\n           </div>\r\n          )\r\n       })\r\n\r\n       const country = currentUsers.map((user) => {\r\n         return(\r\n            <option  key={user.location.country}>\r\n            {user.location.country}\r\n          </option>\r\n         )\r\n       })\r\n\r\n\r\n        let renderPrevBtn = null;\r\n         if(isPrevBtnActive === 'disabled') {\r\n             renderPrevBtn = <div id=\"btnPrev\" className=\"prev\"><div ></div></div>\r\n         }\r\n         else{\r\n            renderPrevBtn = <a href='#' id=\"btnPrev\" onClick={this.btnPrevClick} className=\"prev\"><div ></div></a>\r\n         }\r\n\r\n        let renderNextBtn = null;\r\n         if(isNextBtnActive === 'disabled') {\r\n             renderNextBtn = <div id=\"btnNext\" className=\"next\"><div></div></div>\r\n         }\r\n         else{\r\n          renderNextBtn = <a href='#' id=\"btnNext\" onClick={this.btnNextClick} className=\"next\"><div></div></a>\r\n         }\r\n\r\n        return (\r\n            <div className=\"CardComponent\">\r\n                <div className=\"header\">All Users</div>\r\n                <div className=\"filter\">Filter By</div>\r\n                <div className=\"search-container\">\r\n                  <form onSubmit={this.onSearchSubmit}>\r\n                    <input className=\"search-bar\" type=\"text\" value={this.state.search} onChange={(e) => this.setState({search: e.target.value})} placeholder=\"Find in list\" />\r\n                  </form>\r\n                  {/* <select value=\"country\" className=\"country\">\r\n                    {country}\r\n                  </select> */}\r\n                  <select  className=\"country\" onChange={(e) => this.setState({dropDown: e.target.value})}>\r\n                    <option>country</option>\r\n                      {country}\r\n                  </select>\r\n                  <div className=\"switch-container\">\r\n                    <a href=\"#\" className={`${this.state.switchOn ? \"switch\" : \"switch-one\"}`}>\r\n                      <button onClick={this.handleSwitch} className=\"inner-switch\"></button>\r\n                    </a>\r\n                    <div className=\"switch-country\">Show Country</div>\r\n                  </div>\r\n                </div>\r\n                  <div className={`${this.state.isHidden  ? \"scroll\" : \"scroll-one\"}`}>\r\n                    {user}\r\n                  </div>\r\n                  <div className=\"footer-section\">\r\n                    <button className=\"download\" onClick={this.handleDownload}>Download Results</button>\r\n                    <ul className=\"pagination\">\r\n                      {renderPrevBtn}\r\n                      {renderNextBtn}\r\n                    </ul>\r\n                  </div>\r\n                  <div className={`${!this.state.isHidden ? \"userDetail-card-one\" : \"userDetail-card\"}`}>\r\n                      <UserDetails image=\"\" name=\"fffff\" age=\"ffff\" onClick={this.handleToggleCardView} address=\"fff\" email=\"fff\" joined=\"fff\" phone=\"fff\" cell=\"fff\" />\r\n                  </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CardComponent;","C:\\Users\\user\\Documents\\React\\dashboard\\src\\Component\\SearchBar.js",[],"C:\\Users\\user\\Documents\\React\\dashboard\\src\\Screens\\UserDetails.js",["54","55"],"import React from 'react';\r\nimport './UserDetails.css';\r\n\r\nclass UserDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.fetchUsers();\r\n  }\r\n  render(){\r\n\r\n    const {image, name, age, address, email, joined, phone, cell, onClick} = this.props;\r\n    return (\r\n      <div className=\"user-container\">\r\n          <a href=\"#\" onClick={onClick} className=\"result-button\">RESULTS</a>\r\n          <div className=\"user-profile\">\r\n              <div className=\"profile-img\">\r\n                <img className=\"profile-img-large\" src={image} height=\"11rem\" width=\"11rem\" />\r\n              </div>\r\n              <div className=\"profile-details\">\r\n                  <div className=\"bio\">\r\n                      <div className=\"bio-name\">{name}</div>\r\n                      <div className=\"bio-age\">{age}</div>\r\n                  </div>\r\n                  <div className=\"profile-address\">{address}</div>\r\n                  <div className=\"profile-email\">\r\n                      <div className=\"email-text\">{email}</div>\r\n                  </div>\r\n                  <div className=\"joined\">\r\n                      <div className=\"joined-text\">\r\n                      JOINED: {joined}\r\n                      </div>\r\n                    </div>\r\n                  <div className=\"phone\">\r\n                      <div className=\"profile-no\">{phone}</div>\r\n                  </div>\r\n                  <div className=\"phone\">\r\n                      <div className=\"profile-no\">{cell}</div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserDetails;\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":5,"column":35,"nodeType":"62","messageId":"63","endLine":5,"endColumn":39},{"ruleId":"60","severity":1,"message":"64","line":5,"column":41,"nodeType":"62","messageId":"63","endLine":5,"endColumn":46},{"ruleId":"60","severity":1,"message":"65","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":32,"column":17,"nodeType":"68","endLine":32,"endColumn":83},{"ruleId":"69","severity":1,"message":"70","line":28,"column":25,"nodeType":"68","endLine":28,"endColumn":47},{"ruleId":"71","severity":1,"message":"72","line":28,"column":25,"nodeType":"68","endLine":28,"endColumn":47},{"ruleId":"60","severity":1,"message":"73","line":124,"column":10,"nodeType":"62","messageId":"63","endLine":124,"endColumn":15},{"ruleId":"60","severity":1,"message":"74","line":135,"column":17,"nodeType":"62","messageId":"63","endLine":135,"endColumn":32},{"ruleId":"60","severity":1,"message":"75","line":135,"column":67,"nodeType":"62","messageId":"63","endLine":135,"endColumn":81},{"ruleId":"60","severity":1,"message":"76","line":135,"column":82,"nodeType":"62","messageId":"63","endLine":135,"endColumn":96},{"ruleId":"71","severity":1,"message":"77","line":163,"column":29,"nodeType":"68","endLine":163,"endColumn":99},{"ruleId":"71","severity":1,"message":"77","line":171,"column":27,"nodeType":"68","endLine":171,"endColumn":97},{"ruleId":"71","severity":1,"message":"77","line":190,"column":21,"nodeType":"68","endLine":190,"endColumn":96},{"ruleId":"71","severity":1,"message":"77","line":18,"column":11,"nodeType":"68","endLine":18,"endColumn":67},{"ruleId":"66","severity":1,"message":"67","line":21,"column":17,"nodeType":"68","endLine":21,"endColumn":95},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'users' is assigned a value but never used.","'sortedCountries' is assigned a value but never used.","'upperPageBound' is assigned a value but never used.","'lowerPageBound' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]